{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","reorderedGoods","goods","visibleGoods","sort","goodsA","goodsB","LENGTH","length","ALPHABET","localeCompare","reverse","console","log","getReorderedGoods","className","onClick","type","classNames","map","good","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,kFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EAhDD,SACLC,EACAL,EAAoBE,GAEpB,IAAMI,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAgBC,GACjC,OAAQT,GACN,KAAKL,EAASe,OACZ,OAAOF,EAAOG,OAASF,EAAOE,OAChC,KAAKhB,EAASiB,SACZ,OAAOJ,EAAOK,cAAcJ,GAC9B,QACE,OAAO,MAITP,GACFI,EAAaQ,UAIfC,QAAQC,IAAIhB,EAAUE,GAEfI,EAyBLW,CAAkBrB,EAAiBI,EAAUE,GAE/C,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAXgB,WACtBlB,EAAYN,EAASiB,WAWfQ,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYrB,IAAaL,EAASiB,WALxC,iCAUA,wBACEQ,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,WAAYrB,IAAaL,EAASe,SAEtCS,QA9Ba,WACnBlB,EAAYN,EAASe,SAuBjB,4BAUA,wBACEU,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,YAAanB,IAEjBiB,QA5CQ,WACdhB,GAAeD,IAqCX,sBAUEF,IAAaL,EAASI,MAAQG,IAE9B,wBACEiB,QAxDI,WACZlB,EAAYN,EAASI,MACrBI,GAAc,IAuDNiB,KAAK,SACLF,UAAU,4BAHZ,sBASJ,6BACE,6BACGd,EAAekB,KAAI,SAAAC,GAAI,OACtB,oBAAmB,UAAQ,OAA3B,SAAmCA,GAA1BC,0BCxHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.673f33fa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType, isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodsA: string, goodsB: string) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return goodsA.length - goodsB.length;\n      case SortType.ALPHABET:\n        return goodsA.localeCompare(goodsB);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const sortyByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const reorderedGoods\n  = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortyByAlphabet}\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n        {(sortType !== SortType.NONE || isReversed)\n        && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        <ul>\n          {reorderedGoods.map(good => (\n            <li key={uuidv4()} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}